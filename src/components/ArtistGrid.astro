---
import type { CollectionEntry } from "astro:content";
import ArtistCard from "./ArtistCard.astro";
import Tooltip from "./Tooltip.astro";
import Separator from "../components/Separator.astro";

type Props = {
  artists: CollectionEntry<"artists">[];
};

const { artists } = Astro.props;
const grid = "artists";
---
<p>I offer translation, localization, transcreation, editing, proofreading, and LQA services to help your games connect authentically with Spanish-speaking audiences and expand into new markets.</p>
<h3>Recent projects</h3>
<p>While much of my work is confidential due to non-disclosure agreements, I'm proud to showcase a few projects below where I've received credit.</p>

<section class="artist-grid" id="grid" data-grid={grid}>
  {artists.map((artist) => <ArtistCard artist={artist} />)}
</section>

<Separator />

<ul class="services-grid">
  <li>
    <span>
      <img src="/src/assets/images/devices.gif" alt="">
      <h3>PC, Consoles &amp; Mobile</h3>
    </span>
    <p>I offer translation, localization, transcreation, editing, proofreading, and LQA services to help your games connect authentically with Spanish-speaking audiences and expand into new markets.</p>
  </li>
  <li>
    <span>
      <img src="/src/assets/images/gamer.gif" alt="">
      <h3>Gamer Vision</h3>
    </span>
    <p>Gamers don’t settle for mediocrity and know how to spot quality. A well-designed game understands its audience and meets cultural and linguistic expectations. I bring the gamer insight your localization needs to succeed.</p>
  </li>
  <li>
    <span>
      <img src="/src/assets/images/script.gif" alt="">
      <h3>Glossary Creation</h3>
    </span>
    <p>I create glossaries and termbases from scratch to streamline your game’s localization and minimize errors.</p>
  </li>
  <li>
    <span>
      <img src="/src/assets/images/translator.gif" alt="">
      <h3>Adaptation and CATs</h3>
    </span>
    <p>I work with MemoQ, Memsource (PhraseSkype SmartCat, and many more.</p>
  </li>
</ul>

<Tooltip grid={grid} />

<style>
  h3 {
    margin: 2rem 0 0;
  }
  section {
    position: relative;
    overflow: hidden;
    display: grid;
    width: 100%;
    max-width: 1200px;
    margin: 2rem 0;
    gap: 1rem;
    grid-template-columns: repeat(2, calc(100% / 1));
    @media screen and (min-width: 30em) {
      grid-template-columns: repeat(8, calc(100% / 3));
    }
    @media screen and (min-width: 50em) {
      grid-template-columns: repeat(7, calc(100% / 4));
    }
  }
  
  .services-grid {
    display: flex;
    flex-wrap: wrap;
    margin: 2rem 0;
    padding: 0;
    position: relative;
    gap: 1rem 3rem;
    @media screen and (max-width: 1600px) {
      justify-content: space-between;
    }
    @media screen and (max-width: 1000px) {
      gap: 1rem;
    }
    @media screen and (max-width: 600px) {
      gap: 0rem;
    }
  }

  p {
    max-width: var(--col-size-l);
  }

  li {
    width: 100%;
    max-width: var(--col-size-m);
    list-style-type: none;
  }

  li p {
    font-size: 1.1rem;
  }

  span {
    display: flex;
    gap: 1rem;
  }

  img {
    width: 5rem;
  }
</style>
